{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","NewMovie","onAdd","useState","setTitle","isTitle","setIsTitle","setDescription","isDescription","setIsDescription","setImgUrl","isImgUrl","setIsImgUrl","setImdbUrl","isImdbUrl","setIsImdbUrl","setImdbId","isImdbId","setIsImdbId","onSubmit","event","preventDefault","length","type","placeholder","value","onChange","target","App","moviesFromServer","setMovies","newMovie","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e158d74c.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import { useState } from 'react';\nimport './NewMovie.scss';\n\ntype Props = {\n  onAdd: (movie: Movie) => void;\n};\n\nexport const NewMovie: React.FC<Props> = ({ onAdd }) => {\n  const [title, setTitle] = useState('');\n  const [isTitle, setIsTitle] = useState(false);\n\n  const [description, setDescription] = useState('');\n  const [isDescription, setIsDescription] = useState(false);\n\n  const [imgUrl, setImgUrl] = useState('');\n  const [isImgUrl, setIsImgUrl] = useState(false);\n\n  const [imdbUrl, setImdbUrl] = useState('');\n  const [isImdbUrl, setIsImdbUrl] = useState(false);\n\n  const [imdbId, setImdbId] = useState('');\n  const [isImdbId, setIsImdbId] = useState(false);\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (title.length === 0) {\n      setIsTitle(true);\n    }\n\n    if (description.length === 0) {\n      setIsDescription(true);\n    }\n\n    if (imgUrl.length === 0) {\n      setIsImgUrl(true);\n    }\n\n    if (imdbUrl.length === 0) {\n      setIsImdbUrl(true);\n    }\n\n    if (imdbId.length === 0) {\n      setIsImdbId(true);\n    }\n\n    if (!(title\n      && description\n      && imgUrl\n      && imdbUrl\n      && imdbId)) {\n      return;\n    }\n\n    onAdd({\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    });\n\n    setTitle('');\n    setDescription('');\n    setImgUrl('');\n    setImdbUrl('');\n    setImdbId('');\n  };\n\n  return (\n    <form\n      className=\"form\"\n      onSubmit={handleSubmit}\n    >\n      <input\n        className={isTitle ? 'error' : ''}\n        type=\"text\"\n        placeholder=\"title\"\n        value={title}\n        onChange={(event) => {\n          setTitle(event.target.value);\n        }}\n      />\n      <input\n        className={isDescription ? 'error' : ''}\n        type=\"text\"\n        placeholder=\"description\"\n        value={description}\n        onChange={(event) => {\n          setDescription(event.target.value);\n        }}\n      />\n      <input\n        className={isImgUrl ? 'error' : ''}\n        type=\"text\"\n        placeholder=\"imgUrl\"\n        value={imgUrl}\n        onChange={(event) => {\n          setImgUrl(event.target.value);\n        }}\n      />\n      <input\n        className={isImdbUrl ? 'error' : ''}\n        type=\"text\"\n        placeholder=\"imdbUrl\"\n        value={imdbUrl}\n        onChange={(event) => {\n          setImdbUrl(event.target.value);\n        }}\n      />\n      <input\n        className={isImdbId ? 'error' : ''}\n        type=\"text\"\n        placeholder=\"imdbId\"\n        value={imdbId}\n        onChange={(event) => {\n          setImdbId(event.target.value);\n        }}\n      />\n\n      <button type=\"submit\">Add</button>\n    </form>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport const App:React.FC = () => {\n  const [movies, setMovies] = useState(moviesFromServer);\n\n  const addMovie = (newMovie: Movie) => {\n    setMovies([...movies, newMovie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie onAdd={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}